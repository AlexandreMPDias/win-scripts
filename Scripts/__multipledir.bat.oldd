@echo off

::--------- main ------------

setlocal enabledelayedexpansion
endlocal

set "temp_script_file=%~dp0\temp_script_file"
set "temp_alias_file=%~dp0\temp_alias_file"
set "temp_valid_file=%~dp0\temp_alias_file"

set "pathfile=%~dp0\config\paths"
::checks if the input are correct
::call :validateInputs %1 %2 valid
::if %valid% == 0 goto :eof


:: The alias given by the user
set "inputAlias=%1"

:: The command to execute on the alias' corresponding full
set "inputCommand=%2"


::Reads all lines inside %pathfile%
for /F "tokens=*" %%g IN ('type "%pathfile%"') do (
    endlocal
    call :runScript "%%g"
)

::call :checkFound

exit /B 0

::--------- end of main ------------

:: script
:runScript <line_n_of_file>
setlocal enabledelayedexpansion
    call :split %1 "::" array
endlocal
    echo %1
    echo %array[0]% - %array[1]%
    if %inputAlias% == !array[0]! (
        ::echo %array[1]%>temp
        ::echo %inputCommand% %array[1]%>%temp_script_file%
        %inputCommand% %array[1]%
    )
    goto :eof

:: split subroutine
:split <string_to_split> <split_delimiter> <array_to_populate>
    :: populates <array_to_populate>
    :: creates arrayname.length (number of elements in array)
    :: creates arrayname.ubound (upper index of array)
    set "_data=%~1"

    :: replace delimiter with " " and enclose in quotes
    set _data="!_data:%~2=" "!"

    :: remove empty "" (comment this out if you need to keep empty elements)
    set "_data=%_data:""=%"

    :: initialize array.length=0, array.ubound=-1
    set /a "%~3.length=0, %~3.ubound=-1"

    for %%I in (%_data%) do (
        set "%~3[!%~3.length!]=%%~I"
        set /a "%~3.length+=1, %~3.ubound+=1"
    )
    goto :EOF
:: end of [ split subroutine ]

:: List all valid alias
:checkFound
    if EXIST %temp_found_file% (
        del %temp_found_file%
    ) else (
        :: If the program reached this line, it means no alias was found.
        :: All valid alias will be printed for the user
        echo Error. Undefined alias: %inputAlias%
        echo.
        echo Valid alias are:
        for /F "tokens=*" %%g IN ('type "%pathfile%"') do call :printAlias "%%g"
        if EXIST %temp_alias_file% (
            type %temp_alias_file%
            del %temp_alias_file%
        )
    )
goto :eof

:printAlias <line_n_of_file>
    call :split %1 "::" array
    echo %array[0]% >> %temp_alias_file%
    goto :eof

:: Check if the arguments are as expected
:validateInputs <arg1> <arg2>
    ::arg1 is the the alias chosen by the user
    ::arg2 is the command to execute on the alias' corresponding full path
    set valid=1
    set "usage=Usage: ^<alias^> ^<command^>"
    ::Inputs are valid if:
    ::    - arg1 is not empty
    ::    - arg2 is not empty
    ::    - arg2 is either: cd or start
    if [%1] == [] (
        echo Invalid Usage. Alias must be set.
        set valid=0
    )
    if [%2] == [] (
        echo Invalid Usage. Command must be set.
        set valid=0
    ) else (
        if not [%2] == [cd] (
            if not [%2] == [start] (
                echo Invalid Usage. Command must be either [ cd ] or [ start ]
                set valid=0
            )
        )
    )
    if valid == 0 (
        echo %usage%
    )
    goto :eof